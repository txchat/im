// protoc -I=. -I=$GOPATH/src --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: logic.proto

package grpc

import (
	grpc "github.com/txchat/im/api/comet/grpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_PUSH      Type = 0
	Type_ROOM      Type = 1
	Type_BROADCAST Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "PUSH",
		1: "ROOM",
		2: "BROADCAST",
	}
	Type_value = map[string]int32{
		"PUSH":      0,
		"ROOM":      1,
		"BROADCAST": 2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_logic_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_logic_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{0}
}

type ConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string      `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"` // 客户端连接的是哪个 comet
	Proto  *grpc.Proto `protobuf:"bytes,3,opt,name=proto,proto3" json:"proto,omitempty"`
}

func (x *ConnectReq) Reset() {
	*x = ConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReq) ProtoMessage() {}

func (x *ConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReq.ProtoReflect.Descriptor instead.
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *ConnectReq) GetProto() *grpc.Proto {
	if x != nil {
		return x.Proto
	}
	return nil
}

type ConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	AppId     string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	Mid       string `protobuf:"bytes,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Heartbeat int64  `protobuf:"varint,4,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
}

func (x *ConnectReply) Reset() {
	*x = ConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReply) ProtoMessage() {}

func (x *ConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReply.ProtoReflect.Descriptor instead.
func (*ConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConnectReply) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ConnectReply) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *ConnectReply) GetHeartbeat() int64 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

type DisconnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *DisconnectReq) Reset() {
	*x = DisconnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectReq) ProtoMessage() {}

func (x *DisconnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectReq.ProtoReflect.Descriptor instead.
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{2}
}

func (x *DisconnectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DisconnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type HeartbeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *HeartbeatReq) Reset() {
	*x = HeartbeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReq) ProtoMessage() {}

func (x *HeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReq.ProtoReflect.Descriptor instead.
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeartbeatReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type ReceiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Proto *grpc.Proto `protobuf:"bytes,3,opt,name=proto,proto3" json:"proto,omitempty"`
}

func (x *ReceiveReq) Reset() {
	*x = ReceiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveReq) ProtoMessage() {}

func (x *ReceiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveReq.ProtoReflect.Descriptor instead.
func (*ReceiveReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{4}
}

func (x *ReceiveReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReceiveReq) GetProto() *grpc.Proto {
	if x != nil {
		return x.Proto
	}
	return nil
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOk bool   `protobuf:"varint,1,opt,name=isOk,proto3" json:"isOk,omitempty"`
	Msg  []byte `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{5}
}

func (x *Reply) GetIsOk() bool {
	if x != nil {
		return x.IsOk
	}
	return false
}

func (x *Reply) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// logic --> mq
type BizMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	FromId string `protobuf:"bytes,2,opt,name=fromId,proto3" json:"fromId,omitempty"`
	Type   Type   `protobuf:"varint,4,opt,name=type,proto3,enum=im.logic.Type" json:"type,omitempty"`
	Op     int32  `protobuf:"varint,5,opt,name=op,proto3" json:"op,omitempty"`
	Key    string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Msg    []byte `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BizMsg) Reset() {
	*x = BizMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizMsg) ProtoMessage() {}

func (x *BizMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizMsg.ProtoReflect.Descriptor instead.
func (*BizMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{6}
}

func (x *BizMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *BizMsg) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *BizMsg) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_PUSH
}

func (x *BizMsg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *BizMsg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BizMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// biz --> logic
type MidsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	ToIds []string `protobuf:"bytes,2,rep,name=toIds,proto3" json:"toIds,omitempty"`
	Type  Type     `protobuf:"varint,3,opt,name=type,proto3,enum=im.logic.Type" json:"type,omitempty"`
	Op    int32    `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
	Msg   []byte   `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MidsMsg) Reset() {
	*x = MidsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MidsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MidsMsg) ProtoMessage() {}

func (x *MidsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MidsMsg.ProtoReflect.Descriptor instead.
func (*MidsMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{7}
}

func (x *MidsMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *MidsMsg) GetToIds() []string {
	if x != nil {
		return x.ToIds
	}
	return nil
}

func (x *MidsMsg) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_PUSH
}

func (x *MidsMsg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *MidsMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// biz --> logic
type KeysMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	ToKeys []string `protobuf:"bytes,2,rep,name=toKeys,proto3" json:"toKeys,omitempty"`
	Type   Type     `protobuf:"varint,3,opt,name=type,proto3,enum=im.logic.Type" json:"type,omitempty"`
	Op     int32    `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
	Msg    []byte   `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *KeysMsg) Reset() {
	*x = KeysMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeysMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeysMsg) ProtoMessage() {}

func (x *KeysMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeysMsg.ProtoReflect.Descriptor instead.
func (*KeysMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{8}
}

func (x *KeysMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *KeysMsg) GetToKeys() []string {
	if x != nil {
		return x.ToKeys
	}
	return nil
}

func (x *KeysMsg) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_PUSH
}

func (x *KeysMsg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *KeysMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// biz --> logic
type GroupMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Type  Type   `protobuf:"varint,3,opt,name=type,proto3,enum=im.logic.Type" json:"type,omitempty"`
	Op    int32  `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
	Msg   []byte `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GroupMsg) Reset() {
	*x = GroupMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMsg) ProtoMessage() {}

func (x *GroupMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMsg.ProtoReflect.Descriptor instead.
func (*GroupMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{9}
}

func (x *GroupMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GroupMsg) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupMsg) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_PUSH
}

func (x *GroupMsg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *GroupMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// biz --> logic
type GroupsKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Keys  []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Gid   []string `protobuf:"bytes,3,rep,name=gid,proto3" json:"gid,omitempty"`
}

func (x *GroupsKey) Reset() {
	*x = GroupsKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsKey) ProtoMessage() {}

func (x *GroupsKey) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsKey.ProtoReflect.Descriptor instead.
func (*GroupsKey) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{10}
}

func (x *GroupsKey) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GroupsKey) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *GroupsKey) GetGid() []string {
	if x != nil {
		return x.Gid
	}
	return nil
}

// biz --> logic
type GroupsMid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Mids  []string `protobuf:"bytes,2,rep,name=mids,proto3" json:"mids,omitempty"`
	Gid   []string `protobuf:"bytes,3,rep,name=gid,proto3" json:"gid,omitempty"`
}

func (x *GroupsMid) Reset() {
	*x = GroupsMid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsMid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsMid) ProtoMessage() {}

func (x *GroupsMid) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsMid.ProtoReflect.Descriptor instead.
func (*GroupsMid) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{11}
}

func (x *GroupsMid) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GroupsMid) GetMids() []string {
	if x != nil {
		return x.Mids
	}
	return nil
}

func (x *GroupsMid) GetGid() []string {
	if x != nil {
		return x.Gid
	}
	return nil
}

// biz --> logic
type DelGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Gid   []string `protobuf:"bytes,2,rep,name=gid,proto3" json:"gid,omitempty"`
}

func (x *DelGroupsReq) Reset() {
	*x = DelGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelGroupsReq) ProtoMessage() {}

func (x *DelGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelGroupsReq.ProtoReflect.Descriptor instead.
func (*DelGroupsReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{12}
}

func (x *DelGroupsReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *DelGroupsReq) GetGid() []string {
	if x != nil {
		return x.Gid
	}
	return nil
}

var File_logic_proto protoreflect.FileDescriptor

var file_logic_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x69,
	0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x1a, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x33, 0x33, 0x2e, 0x63, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x69, 0x6d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6d,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x69, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x39, 0x0a,
	0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0x45, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x05, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x69, 0x73, 0x4f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x8e, 0x01, 0x0a, 0x06, 0x42, 0x69, 0x7a,
	0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7b, 0x0a, 0x07, 0x4d, 0x69, 0x64,
	0x73, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x49, 0x64, 0x73,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7d, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x73, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x4b, 0x65, 0x79,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7c, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x69, 0x6d,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x47, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x2a, 0x29, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x52, 0x4f,
	0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x02, 0x32, 0x96, 0x05, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x12, 0x37, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x14, 0x2e,
	0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x0a, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x69, 0x6d, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x12, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x0a, 0x50,
	0x75, 0x73, 0x68, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x73, 0x12, 0x11, 0x2e, 0x69, 0x6d, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4d, 0x69, 0x64, 0x73, 0x4d, 0x73, 0x67, 0x1a, 0x0f, 0x2e, 0x69,
	0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a,
	0x0a, 0x50, 0x75, 0x73, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x11, 0x2e, 0x69, 0x6d,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x1a, 0x0f,
	0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x30, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x2e, 0x69,
	0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67,
	0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x38, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x10, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x73, 0x12,
	0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x4d, 0x69, 0x64, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x1a,
	0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x39, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42,
	0x79, 0x4d, 0x69, 0x64, 0x73, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4d, 0x69, 0x64, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x33, 0x33, 0x2e, 0x63,
	0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logic_proto_rawDescOnce sync.Once
	file_logic_proto_rawDescData = file_logic_proto_rawDesc
)

func file_logic_proto_rawDescGZIP() []byte {
	file_logic_proto_rawDescOnce.Do(func() {
		file_logic_proto_rawDescData = protoimpl.X.CompressGZIP(file_logic_proto_rawDescData)
	})
	return file_logic_proto_rawDescData
}

var file_logic_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_logic_proto_goTypes = []interface{}{
	(Type)(0),             // 0: im.logic.Type
	(*ConnectReq)(nil),    // 1: im.logic.ConnectReq
	(*ConnectReply)(nil),  // 2: im.logic.ConnectReply
	(*DisconnectReq)(nil), // 3: im.logic.DisconnectReq
	(*HeartbeatReq)(nil),  // 4: im.logic.HeartbeatReq
	(*ReceiveReq)(nil),    // 5: im.logic.ReceiveReq
	(*Reply)(nil),         // 6: im.logic.Reply
	(*BizMsg)(nil),        // 7: im.logic.BizMsg
	(*MidsMsg)(nil),       // 8: im.logic.MidsMsg
	(*KeysMsg)(nil),       // 9: im.logic.KeysMsg
	(*GroupMsg)(nil),      // 10: im.logic.GroupMsg
	(*GroupsKey)(nil),     // 11: im.logic.GroupsKey
	(*GroupsMid)(nil),     // 12: im.logic.GroupsMid
	(*DelGroupsReq)(nil),  // 13: im.logic.DelGroupsReq
	(*grpc.Proto)(nil),    // 14: im.comet.Proto
}
var file_logic_proto_depIdxs = []int32{
	14, // 0: im.logic.ConnectReq.proto:type_name -> im.comet.Proto
	14, // 1: im.logic.ReceiveReq.proto:type_name -> im.comet.Proto
	0,  // 2: im.logic.BizMsg.type:type_name -> im.logic.Type
	0,  // 3: im.logic.MidsMsg.type:type_name -> im.logic.Type
	0,  // 4: im.logic.KeysMsg.type:type_name -> im.logic.Type
	0,  // 5: im.logic.GroupMsg.type:type_name -> im.logic.Type
	1,  // 6: im.logic.Logic.Connect:input_type -> im.logic.ConnectReq
	3,  // 7: im.logic.Logic.Disconnect:input_type -> im.logic.DisconnectReq
	4,  // 8: im.logic.Logic.Heartbeat:input_type -> im.logic.HeartbeatReq
	5,  // 9: im.logic.Logic.Receive:input_type -> im.logic.ReceiveReq
	8,  // 10: im.logic.Logic.PushByMids:input_type -> im.logic.MidsMsg
	9,  // 11: im.logic.Logic.PushByKeys:input_type -> im.logic.KeysMsg
	10, // 12: im.logic.Logic.PushGroup:input_type -> im.logic.GroupMsg
	11, // 13: im.logic.Logic.JoinGroupsByKeys:input_type -> im.logic.GroupsKey
	12, // 14: im.logic.Logic.JoinGroupsByMids:input_type -> im.logic.GroupsMid
	11, // 15: im.logic.Logic.LeaveGroupsByKeys:input_type -> im.logic.GroupsKey
	12, // 16: im.logic.Logic.LeaveGroupsByMids:input_type -> im.logic.GroupsMid
	13, // 17: im.logic.Logic.DelGroups:input_type -> im.logic.DelGroupsReq
	2,  // 18: im.logic.Logic.Connect:output_type -> im.logic.ConnectReply
	6,  // 19: im.logic.Logic.Disconnect:output_type -> im.logic.Reply
	6,  // 20: im.logic.Logic.Heartbeat:output_type -> im.logic.Reply
	6,  // 21: im.logic.Logic.Receive:output_type -> im.logic.Reply
	6,  // 22: im.logic.Logic.PushByMids:output_type -> im.logic.Reply
	6,  // 23: im.logic.Logic.PushByKeys:output_type -> im.logic.Reply
	6,  // 24: im.logic.Logic.PushGroup:output_type -> im.logic.Reply
	6,  // 25: im.logic.Logic.JoinGroupsByKeys:output_type -> im.logic.Reply
	6,  // 26: im.logic.Logic.JoinGroupsByMids:output_type -> im.logic.Reply
	6,  // 27: im.logic.Logic.LeaveGroupsByKeys:output_type -> im.logic.Reply
	6,  // 28: im.logic.Logic.LeaveGroupsByMids:output_type -> im.logic.Reply
	6,  // 29: im.logic.Logic.DelGroups:output_type -> im.logic.Reply
	18, // [18:30] is the sub-list for method output_type
	6,  // [6:18] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_logic_proto_init() }
func file_logic_proto_init() {
	if File_logic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MidsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeysMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsMid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logic_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logic_proto_goTypes,
		DependencyIndexes: file_logic_proto_depIdxs,
		EnumInfos:         file_logic_proto_enumTypes,
		MessageInfos:      file_logic_proto_msgTypes,
	}.Build()
	File_logic_proto = out.File
	file_logic_proto_rawDesc = nil
	file_logic_proto_goTypes = nil
	file_logic_proto_depIdxs = nil
}
